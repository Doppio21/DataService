// Code generated by MockGen. DO NOT EDIT.
// Source: dataservice/internal/api/ageapi (interfaces: AgeAPI)
//
// Generated by this command:
//
//	mockgen -package ageapi -destination api_mock.go . AgeAPI
//

// Package ageapi is a generated GoMock package.
package ageapi

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAgeAPI is a mock of AgeAPI interface.
type MockAgeAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAgeAPIMockRecorder
}

// MockAgeAPIMockRecorder is the mock recorder for MockAgeAPI.
type MockAgeAPIMockRecorder struct {
	mock *MockAgeAPI
}

// NewMockAgeAPI creates a new mock instance.
func NewMockAgeAPI(ctrl *gomock.Controller) *MockAgeAPI {
	mock := &MockAgeAPI{ctrl: ctrl}
	mock.recorder = &MockAgeAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgeAPI) EXPECT() *MockAgeAPIMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockAgeAPI) Get(arg0 context.Context, arg1 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAgeAPIMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAgeAPI)(nil).Get), arg0, arg1)
}
