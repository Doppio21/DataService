// Code generated by MockGen. DO NOT EDIT.
// Source: dataservice/internal/api/genderapi (interfaces: GenderAPI)
//
// Generated by this command:
//
//	mockgen -package genderapi -destination api_mock.go . GenderAPI
//

// Package genderapi is a generated GoMock package.
package genderapi

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGenderAPI is a mock of GenderAPI interface.
type MockGenderAPI struct {
	ctrl     *gomock.Controller
	recorder *MockGenderAPIMockRecorder
}

// MockGenderAPIMockRecorder is the mock recorder for MockGenderAPI.
type MockGenderAPIMockRecorder struct {
	mock *MockGenderAPI
}

// NewMockGenderAPI creates a new mock instance.
func NewMockGenderAPI(ctrl *gomock.Controller) *MockGenderAPI {
	mock := &MockGenderAPI{ctrl: ctrl}
	mock.recorder = &MockGenderAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenderAPI) EXPECT() *MockGenderAPIMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockGenderAPI) Get(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockGenderAPIMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGenderAPI)(nil).Get), arg0, arg1)
}
